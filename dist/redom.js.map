{"version":3,"file":"redom.js","sources":["../src/create-element.ts","../src/html.ts","../src/unmount.ts","../src/mount.ts","../src/setstyle.ts","../src/setattr.ts","../src/text.ts","../src/util.ts","../src/dispatch.ts","../src/setchildren.ts","../src/listpool.ts","../src/list.ts","../src/place.ts","../src/ref.ts","../src/router.ts","../src/svg.ts","../src/view-factory.ts"],"sourcesContent":["export function createElement(query, ns) {\n  const { tag, id, className } = parse(query);\n  const element = ns\n    ? document.createElementNS(ns, tag)\n    : document.createElement(tag);\n\n  if (id) {\n    element.id = id;\n  }\n\n  if (className) {\n    if (ns) {\n      element.setAttribute(\"class\", className);\n    } else {\n      element.className = className;\n    }\n  }\n\n  return element;\n}\n\nfunction parse(query) {\n  const chunks = query.split(/([.#])/);\n  let className = \"\";\n  let id = \"\";\n\n  for (let i = 1; i < chunks.length; i += 2) {\n    switch (chunks[i]) {\n      case \".\":\n        className += ` ${chunks[i + 1]}`;\n        break;\n\n      case \"#\":\n        id = chunks[i + 1];\n    }\n  }\n\n  return {\n    className: className.trim(),\n    tag: chunks[0] || \"div\",\n    id,\n  };\n}\n","import { createElement } from \"./create-element\";\nimport { parseArgumentsInternal, getEl } from \"./util\";\n\nexport function html(query, ...args) {\n  let element;\n\n  const type = typeof query;\n\n  if (type === \"string\") {\n    element = createElement(query);\n  } else if (type === \"function\") {\n    const Query = query;\n    element = new Query(...args);\n  } else {\n    throw new Error(\"At least one argument required\");\n  }\n\n  parseArgumentsInternal(getEl(element), args, true);\n\n  return element;\n}\n\nexport const el = html;\nexport const h = html;\n\nhtml.extend = function extendHtml(...args) {\n  return html.bind(this, ...args);\n};\n","import { getEl } from \"./util\";\nimport { trigger } from \"./mount.ts\";\n\nexport function unmount(parent, _child) {\n  let child = _child;\n  const parentEl = getEl(parent);\n  const childEl = getEl(child);\n\n  if (child === childEl && childEl.__redom_view) {\n    // try to look up the view if not provided\n    child = childEl.__redom_view;\n  }\n\n  if (childEl.parentNode) {\n    doUnmount(child, childEl, parentEl);\n\n    parentEl.removeChild(childEl);\n  }\n\n  return child;\n}\n\nexport function doUnmount(child, childEl, parentEl) {\n  const hooks = childEl.__redom_lifecycle;\n\n  if (hooksAreEmpty(hooks)) {\n    childEl.__redom_lifecycle = {};\n    return;\n  }\n\n  let traverse = parentEl;\n\n  if (childEl.__redom_mounted) {\n    trigger(childEl, \"onunmount\");\n  }\n\n  while (traverse) {\n    const parentHooks = traverse.__redom_lifecycle || {};\n\n    for (const hook in hooks) {\n      if (parentHooks[hook]) {\n        parentHooks[hook] -= hooks[hook];\n      }\n    }\n\n    if (hooksAreEmpty(parentHooks)) {\n      traverse.__redom_lifecycle = null;\n    }\n\n    traverse = traverse.parentNode;\n  }\n}\n\nfunction hooksAreEmpty(hooks) {\n  if (hooks == null) {\n    return true;\n  }\n  for (const key in hooks) {\n    if (hooks[key]) {\n      return false;\n    }\n  }\n  return true;\n}\n","/* global Node, ShadowRoot */\n\nimport { getEl } from \"./util\";\nimport { doUnmount } from \"./unmount\";\n\nconst hookNames = [\"onmount\", \"onremount\", \"onunmount\"];\nconst shadowRootAvailable =\n  typeof window !== \"undefined\" && \"ShadowRoot\" in window;\n\nexport function mount(parent, _child, before, replace) {\n  let child = _child;\n  const parentEl = getEl(parent);\n  const childEl = getEl(child);\n\n  if (child === childEl && childEl.__redom_view) {\n    // try to look up the view if not provided\n    child = childEl.__redom_view;\n  }\n\n  if (child !== childEl) {\n    childEl.__redom_view = child;\n  }\n\n  const wasMounted = childEl.__redom_mounted;\n  const oldParent = childEl.parentNode;\n\n  if (wasMounted && oldParent !== parentEl) {\n    doUnmount(child, childEl, oldParent);\n  }\n\n  if (before != null) {\n    if (replace) {\n      const beforeEl = getEl(before);\n\n      if (beforeEl.__redom_mounted) {\n        trigger(beforeEl, \"onunmount\");\n      }\n\n      parentEl.replaceChild(childEl, beforeEl);\n    } else {\n      parentEl.insertBefore(childEl, getEl(before));\n    }\n  } else {\n    parentEl.appendChild(childEl);\n  }\n\n  doMount(child, childEl, parentEl, oldParent);\n\n  return child;\n}\n\nexport function trigger(el, eventName) {\n  if (eventName === \"onmount\" || eventName === \"onremount\") {\n    el.__redom_mounted = true;\n  } else if (eventName === \"onunmount\") {\n    el.__redom_mounted = false;\n  }\n\n  const hooks = el.__redom_lifecycle;\n\n  if (!hooks) {\n    return;\n  }\n\n  const view = el.__redom_view;\n  let hookCount = 0;\n\n  view?.[eventName]?.();\n\n  for (const hook in hooks) {\n    if (hook) {\n      hookCount++;\n    }\n  }\n\n  if (hookCount) {\n    let traverse = el.firstChild;\n\n    while (traverse) {\n      const next = traverse.nextSibling;\n\n      trigger(traverse, eventName);\n\n      traverse = next;\n    }\n  }\n}\n\nfunction doMount(child, childEl, parentEl, oldParent) {\n  if (!childEl.__redom_lifecycle) {\n    childEl.__redom_lifecycle = {};\n  }\n\n  const hooks = childEl.__redom_lifecycle;\n  const remount = parentEl === oldParent;\n  let hooksFound = false;\n\n  for (const hookName of hookNames) {\n    if (!remount) {\n      // if already mounted, skip this phase\n      if (child !== childEl) {\n        // only Views can have lifecycle events\n        if (hookName in child) {\n          hooks[hookName] = (hooks[hookName] || 0) + 1;\n        }\n      }\n    }\n    if (hooks[hookName]) {\n      hooksFound = true;\n    }\n  }\n\n  if (!hooksFound) {\n    childEl.__redom_lifecycle = {};\n    return;\n  }\n\n  let traverse = parentEl;\n  let triggered = false;\n\n  if (remount || traverse?.__redom_mounted) {\n    trigger(childEl, remount ? \"onremount\" : \"onmount\");\n    triggered = true;\n  }\n\n  while (traverse) {\n    const parent = traverse.parentNode;\n\n    if (!traverse.__redom_lifecycle) {\n      traverse.__redom_lifecycle = {};\n    }\n\n    const parentHooks = traverse.__redom_lifecycle;\n\n    for (const hook in hooks) {\n      parentHooks[hook] = (parentHooks[hook] || 0) + hooks[hook];\n    }\n\n    if (triggered) {\n      break;\n    }\n    if (\n      traverse.nodeType === Node.DOCUMENT_NODE ||\n      (shadowRootAvailable && traverse instanceof ShadowRoot) ||\n      parent?.__redom_mounted\n    ) {\n      trigger(traverse, remount ? \"onremount\" : \"onmount\");\n      triggered = true;\n    }\n    traverse = parent;\n  }\n}\n","import { getEl } from \"./util\";\n\nexport function setStyle(view, arg1, arg2) {\n  const el = getEl(view);\n\n  if (typeof arg1 === \"object\") {\n    for (const key in arg1) {\n      setStyleValue(el, key, arg1[key]);\n    }\n  } else {\n    setStyleValue(el, arg1, arg2);\n  }\n}\n\nfunction setStyleValue(el, key, value) {\n  el.style[key] = value == null ? \"\" : value;\n}\n","/* global SVGElement */\n\nimport { setStyle } from \"./setstyle\";\nimport { getEl } from \"./util\";\n\nconst xlinkns = \"http://www.w3.org/1999/xlink\";\n\nexport function setAttr(view, arg1, arg2) {\n  setAttrInternal(view, arg1, arg2);\n}\n\nexport function setAttrInternal(view, arg1, arg2, initial) {\n  const el = getEl(view);\n\n  const isObj = typeof arg1 === \"object\";\n\n  if (isObj) {\n    for (const key in arg1) {\n      setAttrInternal(el, key, arg1[key], initial);\n    }\n  } else {\n    const isSVG = el instanceof SVGElement;\n    const isFunc = typeof arg2 === \"function\";\n\n    if (arg1 === \"style\" && typeof arg2 === \"object\") {\n      setStyle(el, arg2);\n    } else if (isSVG && isFunc) {\n      el[arg1] = arg2;\n    } else if (arg1 === \"dataset\") {\n      setData(el, arg2);\n    } else if (!isSVG && (arg1 in el || isFunc) && arg1 !== \"list\") {\n      el[arg1] = arg2;\n    } else {\n      if (isSVG && arg1 === \"xlink\") {\n        setXlink(el, arg2);\n        return;\n      }\n      if (initial && arg1 === \"class\") {\n        setClassName(el, arg2);\n        return;\n      }\n      if (arg2 == null) {\n        el.removeAttribute(arg1);\n      } else {\n        el.setAttribute(arg1, arg2);\n      }\n    }\n  }\n}\n\nfunction setClassName(el, additionToClassName) {\n  if (additionToClassName == null) {\n    el.removeAttribute(\"class\");\n  } else if (el.classList) {\n    el.classList.add(additionToClassName);\n  } else if (\n    typeof el.className === \"object\" &&\n    el.className &&\n    el.className.baseVal\n  ) {\n    el.className.baseVal =\n      `${el.className.baseVal} ${additionToClassName}`.trim();\n  } else {\n    el.className = `${el.className} ${additionToClassName}`.trim();\n  }\n}\n\nexport function setXlink(el, arg1, arg2) {\n  if (typeof arg1 === \"object\") {\n    for (const key in arg1) {\n      setXlink(el, key, arg1[key]);\n    }\n  } else {\n    if (arg2 != null) {\n      el.setAttributeNS(xlinkns, arg1, arg2);\n    } else {\n      el.removeAttributeNS(xlinkns, arg1, arg2);\n    }\n  }\n}\n\nexport function setData(el, arg1, arg2) {\n  if (typeof arg1 === \"object\") {\n    for (const key in arg1) {\n      setData(el, key, arg1[key]);\n    }\n  } else {\n    if (arg2 != null) {\n      el.dataset[arg1] = arg2;\n    } else {\n      delete el.dataset[arg1];\n    }\n  }\n}\n","export function text(str) {\n  return document.createTextNode(str != null ? str : \"\");\n}\n","import { html } from \"./html.ts\";\nimport { mount } from \"./mount.ts\";\nimport { setAttrInternal } from \"./setattr.ts\";\nimport { text } from \"./text.ts\";\n\nexport function parseArguments(element, args) {\n  parseArgumentsInternal(element, args);\n}\n\nexport function parseArgumentsInternal(element, args, initial) {\n  for (const arg of args) {\n    if (arg !== 0 && !arg) {\n      continue;\n    }\n\n    const type = typeof arg;\n\n    if (type === \"function\") {\n      arg(element);\n    } else if (type === \"string\" || type === \"number\") {\n      element.appendChild(text(arg));\n    } else if (isNode(getEl(arg))) {\n      mount(element, arg);\n    } else if (arg.length) {\n      parseArgumentsInternal(element, arg, initial);\n    } else if (type === \"object\") {\n      setAttrInternal(element, arg, null, initial);\n    }\n  }\n}\n\nexport function ensureEl(parent) {\n  return typeof parent === \"string\" ? html(parent) : getEl(parent);\n}\n\nexport function getEl(parent) {\n  return (\n    (parent.nodeType && parent) || (!parent.el && parent) || getEl(parent.el)\n  );\n}\n\nexport function isNode(arg) {\n  return arg?.nodeType;\n}\n","import { getEl } from \"./util\";\n\nexport function dispatch(child, data, eventName = \"redom\") {\n  const childEl = getEl(child);\n  const event = new CustomEvent(eventName, { bubbles: true, detail: data });\n  childEl.dispatchEvent(event);\n}\n","import { mount } from \"./mount.ts\";\nimport { unmount } from \"./unmount\";\nimport { getEl, isNode } from \"./util\";\n\nexport function setChildren(parent, ...children) {\n  const parentEl = getEl(parent);\n  let current = traverse(parent, children, parentEl.firstChild);\n\n  while (current) {\n    const next = current.nextSibling;\n\n    unmount(parent, current);\n\n    current = next;\n  }\n}\n\nfunction traverse(parent, children, _current) {\n  let current = _current;\n\n  const childEls = Array(children.length);\n\n  for (let i = 0; i < children.length; i++) {\n    childEls[i] = children[i] && getEl(children[i]);\n  }\n\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n\n    if (!child) {\n      continue;\n    }\n\n    const childEl = childEls[i];\n\n    if (childEl === current) {\n      current = current.nextSibling;\n      continue;\n    }\n\n    if (isNode(childEl)) {\n      const next = current?.nextSibling;\n      const exists = child.__redom_index != null;\n      const replace = exists && next === childEls[i + 1];\n\n      mount(parent, child, current, replace);\n\n      if (replace) {\n        current = next;\n      }\n\n      continue;\n    }\n\n    if (child.length != null) {\n      current = traverse(parent, child, current);\n    }\n  }\n\n  return current;\n}\n","import { getEl } from \"./util\";\n\nexport function listPool(View, key, initData) {\n  return new ListPool(View, key, initData);\n}\n\nexport class ListPool {\n  constructor(View, key, initData) {\n    this.View = View;\n    this.initData = initData;\n    this.oldLookup = {};\n    this.lookup = {};\n    this.oldViews = [];\n    this.views = [];\n\n    if (key != null) {\n      this.key = typeof key === \"function\" ? key : propKey(key);\n    }\n  }\n\n  update(data, context) {\n    const { View, key, initData } = this;\n    const keySet = key != null;\n\n    const oldLookup = this.lookup;\n    const newLookup = {};\n\n    const newViews = Array(data.length);\n    const oldViews = this.views;\n\n    for (let i = 0; i < data.length; i++) {\n      const item = data[i];\n      let view;\n\n      if (keySet) {\n        const id = key(item);\n\n        view = oldLookup[id] || new View(initData, item, i, data);\n        newLookup[id] = view;\n        view.__redom_id = id;\n      } else {\n        view = oldViews[i] || new View(initData, item, i, data);\n      }\n      view.update?.(item, i, data, context);\n\n      const el = getEl(view.el);\n\n      el.__redom_view = view;\n      newViews[i] = view;\n    }\n\n    this.oldViews = oldViews;\n    this.views = newViews;\n\n    this.oldLookup = oldLookup;\n    this.lookup = newLookup;\n  }\n}\n\nfunction propKey(key) {\n  return function proppedKey(item) {\n    return item[key];\n  };\n}\n","import { setChildren } from \"./setchildren\";\nimport { ensureEl } from \"./util\";\nimport { unmount } from \"./unmount\";\nimport { ListPool } from \"./listpool\";\n\nexport function list(parent, View, key, initData) {\n  return new List(parent, View, key, initData);\n}\n\nexport class List {\n  constructor(parent, View, key, initData) {\n    this.View = View;\n    this.initData = initData;\n    this.views = [];\n    this.pool = new ListPool(View, key, initData);\n    this.el = ensureEl(parent);\n    this.keySet = key != null;\n  }\n\n  update(data, context) {\n    const { keySet } = this;\n    const oldViews = this.views;\n\n    this.pool.update(data || [], context);\n\n    const { views, lookup } = this.pool;\n\n    if (keySet) {\n      for (let i = 0; i < oldViews.length; i++) {\n        const oldView = oldViews[i];\n        const id = oldView.__redom_id;\n\n        if (lookup[id] == null) {\n          oldView.__redom_index = null;\n          unmount(this, oldView);\n        }\n      }\n    }\n\n    for (let i = 0; i < views.length; i++) {\n      const view = views[i];\n\n      view.__redom_index = i;\n    }\n\n    setChildren(this, views);\n\n    if (keySet) {\n      this.lookup = lookup;\n    }\n    this.views = views;\n  }\n}\n\nList.extend = function extendList(parent, View, key, initData) {\n  return List.bind(List, parent, View, key, initData);\n};\n\nlist.extend = List.extend;\n","/* global Node */\n\nimport { text } from \"./text\";\nimport { mount } from \"./mount.ts\";\nimport { unmount } from \"./unmount\";\nimport { getEl } from \"./util\";\n\nexport function place(View, initData) {\n  return new Place(View, initData);\n}\n\nexport class Place {\n  constructor(View, initData) {\n    this.el = text(\"\");\n    this.visible = false;\n    this.view = null;\n    this._placeholder = this.el;\n\n    if (View instanceof Node) {\n      this._el = View;\n    } else if (View.el instanceof Node) {\n      this._el = View;\n      this.view = View;\n    } else {\n      this._View = View;\n    }\n\n    this._initData = initData;\n  }\n\n  update(visible, data) {\n    const placeholder = this._placeholder;\n    const parentNode = this.el.parentNode;\n\n    if (visible) {\n      if (!this.visible) {\n        if (this._el) {\n          mount(parentNode, this._el, placeholder);\n          unmount(parentNode, placeholder);\n\n          this.el = getEl(this._el);\n          this.visible = visible;\n        } else {\n          const View = this._View;\n          const view = new View(this._initData);\n\n          this.el = getEl(view);\n          this.view = view;\n\n          mount(parentNode, view, placeholder);\n          unmount(parentNode, placeholder);\n        }\n      }\n      this.view?.update?.(data);\n    } else {\n      if (this.visible) {\n        if (this._el) {\n          mount(parentNode, placeholder, this._el);\n          unmount(parentNode, this._el);\n\n          this.el = placeholder;\n          this.visible = visible;\n\n          return;\n        }\n        mount(parentNode, placeholder, this.view);\n        unmount(parentNode, this.view);\n\n        this.el = placeholder;\n        this.view = null;\n      }\n    }\n    this.visible = visible;\n  }\n}\n","export function ref(ctx, key, value) {\n  ctx[key] = value;\n  return value;\n}\n","/* global Node */\n\nimport { ensureEl } from \"./util\";\nimport { setChildren } from \"./setchildren\";\n\nexport function router(parent, views, initData) {\n  return new Router(parent, views, initData);\n}\n\nexport class Router {\n  constructor(parent, views, initData) {\n    this.el = ensureEl(parent);\n    this.views = views;\n    this.Views = views; // backwards compatibility\n    this.initData = initData;\n  }\n\n  update(route, data) {\n    if (route !== this.route) {\n      const views = this.views;\n      const View = views[route];\n\n      this.route = route;\n\n      if (View && (View instanceof Node || View.el instanceof Node)) {\n        this.view = View;\n      } else {\n        this.view = View && new View(this.initData, data);\n      }\n\n      setChildren(this.el, [this.view]);\n    }\n    this.view?.update?.(data, route);\n  }\n}\n","import { createElement } from \"./create-element.ts\";\nimport { parseArgumentsInternal, getEl } from \"./util\";\n\nconst ns = \"http://www.w3.org/2000/svg\";\n\nexport function svg(query, ...args) {\n  let element;\n\n  const type = typeof query;\n\n  if (type === \"string\") {\n    element = createElement(query, ns);\n  } else if (type === \"function\") {\n    const Query = query;\n    element = new Query(...args);\n  } else {\n    throw new Error(\"At least one argument required\");\n  }\n\n  parseArgumentsInternal(getEl(element), args, true);\n\n  return element;\n}\n\nexport const s = svg;\n\nsvg.extend = function extendSvg(...args) {\n  return svg.bind(this, ...args);\n};\n\nsvg.ns = ns;\n","export function viewFactory(views, key) {\n  if (!views || typeof views !== \"object\") {\n    throw new Error(\"views must be an object\");\n  }\n  if (!key || typeof key !== \"string\") {\n    throw new Error(\"key must be a string\");\n  }\n  return function factoryView(initData, item, i, data) {\n    const viewKey = item[key];\n    const View = views[viewKey];\n\n    if (View) {\n      return new View(initData, item, i, data);\n    }\n\n    throw new Error(`view ${viewKey} not found`);\n  };\n}\n"],"names":["createElement","query","ns","tag","id","className","parse","element","document","createElementNS","setAttribute","chunks","split","i","length","trim","html","args","type","Query","Error","parseArgumentsInternal","getEl","el","h","extend","extendHtml","bind","unmount","parent","_child","child","parentEl","childEl","__redom_view","parentNode","doUnmount","removeChild","hooks","__redom_lifecycle","hooksAreEmpty","traverse","__redom_mounted","trigger","parentHooks","hook","key","hookNames","shadowRootAvailable","window","mount","before","replace","wasMounted","oldParent","beforeEl","replaceChild","insertBefore","appendChild","doMount","eventName","view","hookCount","firstChild","next","nextSibling","remount","hooksFound","hookName","triggered","nodeType","Node","DOCUMENT_NODE","ShadowRoot","setStyle","arg1","arg2","setStyleValue","value","style","xlinkns","setAttr","setAttrInternal","initial","isObj","isSVG","SVGElement","isFunc","setData","setXlink","setClassName","removeAttribute","additionToClassName","classList","add","baseVal","setAttributeNS","removeAttributeNS","dataset","text","str","createTextNode","arg","isNode","ensureEl","dispatch","data","event","CustomEvent","bubbles","detail","dispatchEvent","setChildren","children","current","_current","childEls","Array","exists","__redom_index","listPool","View","initData","ListPool","update","context","keySet","oldLookup","lookup","newLookup","newViews","oldViews","views","item","__redom_id","constructor","propKey","proppedKey","list","List","pool","oldView","extendList","place","Place","visible","placeholder","_placeholder","_el","_View","_initData","ref","ctx","router","Router","route","Views","svg","s","extendSvg","viewFactory","factoryView","viewKey"],"mappings":"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"}